{"version":3,"sources":["Components/Spinner.js","Components/JoinURLHandler.js","Components/Tile.style.js","Components/Tile.js","Components/GameBoard.js","Components/GameOptions.styles.js","Components/SessionOptions.js","Components/GameOptions.js","Components/Lobby.js","Components/App.js","Components/useSocket.js","serviceWorker.js","index.js"],"names":["Container","styled","div","props","color","Spinner","rest","JoinWrapper","JoinURLHandler","id","useParams","useContext","GameContext","joinGame","socket","gameState","useEffect","console","log","setTimeout","to","Backgrounds","unflipped","css","flippedNeutral","flippedSuddenDeath","flippedRed","flippedBlue","TileWrapper","isSpymaster","flipped","type","Tile","data","flipTile","userState","onClick","name","Gameboard","GameBoard","Array","from","map","item","key","Row","ContentContainer","Banner","ButtonStyle","InputButton","button","NewGameButton","StyledInput","input","GameIdText","span","wasCopied","Component","setName","useState","nameInputVal","setNameInputVal","setWasCopied","savedName","localStorage","getItem","nickname","gameID","text","window","location","origin","navigator","permissions","query","then","result","state","clipboard","writeText","value","onChange","e","target","placeholder","setItem","createGame","sessionInputVal","setSessionInputVal","preventDefault","NicknameDisplay","joinTeam","setSpymaster","users","players","reduce","acc","current","team","red","push","blue","none","user","find","React","createContext","Wrapper","App","socketContext","url","setSocket","setGameState","setUserState","connection","io","close","on","res","emit","tileId","gameId","teamId","useSocket","Provider","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14cdf807.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  & {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  & div {\n    animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    transform-origin: 40px 40px;\n  }\n  & div:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: ${(props) => props.color ?? \"#fff\"};\n    margin: -4px 0 0 -4px;\n  }\n  & div:nth-child(1) {\n    animation-delay: -0.036s;\n  }\n  & div:nth-child(1):after {\n    top: 63px;\n    left: 63px;\n  }\n  & div:nth-child(2) {\n    animation-delay: -0.072s;\n  }\n  & div:nth-child(2):after {\n    top: 68px;\n    left: 56px;\n  }\n  & div:nth-child(3) {\n    animation-delay: -0.108s;\n  }\n  & div:nth-child(3):after {\n    top: 71px;\n    left: 48px;\n  }\n  & div:nth-child(4) {\n    animation-delay: -0.144s;\n  }\n  & div:nth-child(4):after {\n    top: 72px;\n    left: 40px;\n  }\n  & div:nth-child(5) {\n    animation-delay: -0.18s;\n  }\n  & div:nth-child(5):after {\n    top: 71px;\n    left: 32px;\n  }\n  & div:nth-child(6) {\n    animation-delay: -0.216s;\n  }\n  & div:nth-child(6):after {\n    top: 68px;\n    left: 24px;\n  }\n  & div:nth-child(7) {\n    animation-delay: -0.252s;\n  }\n  & div:nth-child(7):after {\n    top: 63px;\n    left: 17px;\n  }\n  & div:nth-child(8) {\n    animation-delay: -0.288s;\n  }\n  & div:nth-child(8):after {\n    top: 56px;\n    left: 12px;\n  }\n  @keyframes lds-roller {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default function Spinner({ color, ...rest }) {\n  return (\n    <Container color={color} {...rest}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </Container>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { GameContext } from \"./App\";\nimport Spinner from \"./Spinner\";\nimport styled from \"styled-components\";\n\nconst JoinWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: grid;\n  z-index: 100;\n  align-items: center;\n  justify-items: center;\n  pointer-events: none;\n`;\n\nexport default function JoinURLHandler() {\n  const { id } = useParams();\n  const { joinGame, socket, gameState } = useContext(GameContext);\n\n  useEffect(() => {\n    if (id && socket) {\n      console.log(`joining ${id}`);\n\n      setTimeout(() => joinGame(id), 1500);\n    }\n  }, [socket]);\n\n  return gameState ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <JoinWrapper>\n      <Spinner color=\"#000\" />\n    </JoinWrapper>\n  );\n}\n","import styled, { css } from \"styled-components\";\n\nconst Backgrounds = {\n  unflipped: css`\n    background: repeating-linear-gradient(\n      45deg,\n      #dfe5e7,\n      #dfe5e7 10px,\n      #eaede3 10px,\n      #eaede3 20px\n    );\n  `,\n  flippedNeutral: css`\n    background: repeating-linear-gradient(\n      -45deg,\n      #f1f1d9,\n      #f1f1d9 10px,\n      #f9f9f0 10px,\n      #f9f9f0 20px\n    );\n    color: rgba(102, 102, 102, 0.57);\n  `,\n  flippedSuddenDeath: css`\n    background: repeating-linear-gradient(\n      -45deg,\n      #7d7d7d,\n      #7d7d7d 10px,\n      #9c9c9c 10px,\n      #9c9c9c 20px\n    );\n  `,\n  flippedRed: css`\n    background: repeating-linear-gradient(\n      -45deg,\n      #c44236,\n      #c44236 10px,\n      #d56a60 10px,\n      #d56a60 20px\n    );\n  `,\n  flippedBlue: css`\n    background: repeating-linear-gradient(\n      -45deg,\n      #3695c4,\n      #3695c4 10px,\n      #62afd5 10px,\n      #62afd5 20px\n    );\n  `\n};\n\nconst TileWrapper = styled.div`\n  color: #333333;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  padding: ${props => (props.isSpymaster ? \"7px\" : \"14px\")};\n  margin: 5px;\n  cursor: pointer;\n  font-family: sans-serif;\n  display: flex;\n  justify-content: center;\n  font-weight: bold;\n  background-color: #f9f9f0;\n  \n  & > span {\n    padding: 5px;\n  }\n  transition: all 0.5s ease;\n\n  ${props =>\n    props.flipped &&\n    css`\n      box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.45);\n      color: rgba(240, 240, 240, 0.57);\n    `}\n\n  ${props =>\n    props.type === 0 && props.flipped\n      ? Backgrounds.flippedNeutral\n      : props.type === 1 && props.flipped\n      ? Backgrounds.flippedSuddenDeath\n      : props.type === 2 && props.flipped\n      ? Backgrounds.flippedRed\n      : props.type === 3 && props.flipped\n      ? Backgrounds.flippedBlue\n      : null}\n\n  ${props =>\n    props.type === 0 && props.isSpymaster\n      ? css`\n          border: 8px solid #f1f1d9;\n        `\n      : props.type === 1 && props.isSpymaster\n      ? css`\n          border: 8px solid #131313;\n        `\n      : props.type === 2 && props.isSpymaster\n      ? css`\n          border: 8px solid #c44236;\n        `\n      : props.type === 3 && props.isSpymaster\n      ? css`\n          border: 8px solid #3695c4;\n        `\n      : null}\n\n\n    @media screen and (max-width: 600px) {\n      padding: 5px;\n      border-width: 4px;\n      margin: 3px;\n      font-size: 11px;\n    }\n\n    @media screen and (max-width: 350px) {\n      padding: 2px;\n      border-width: 3px;\n      margin: 2px;\n      font-size: 10px;\n    }\n`;\n\nexport default TileWrapper;\n","import React, { useContext } from \"react\";\nimport TileWrapper from \"./Tile.style\";\n\nimport { GameContext } from \"./App\";\n\nexport default function Tile({ data }) {\n  const { flipTile, userState } = useContext(GameContext);\n  //const flipTile = () => null;\n\n  if (!userState) return null;\n\n  return (\n    <TileWrapper\n      onClick={() => flipTile(data.id)}\n      flipped={data.flipped}\n      type={data.type}\n      isSpymaster={userState.isSpymaster}\n    >\n      <span>{data.name}</span>\n    </TileWrapper>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Tile from \"./Tile\";\nimport styled from \"styled-components\";\nimport { GameContext } from \"./App\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  user-select: none;\n  background: rgba(0, 0, 0, 0.35);\n`;\n\nconst Gameboard = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  max-width: 750px;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 5px;\n\n  @media screen and (max-width: 600px) {\n    margin: 10px 0 10px 0;\n    padding: 0;\n    grid-gap: 0px;\n  }\n`;\n\nexport default function GameBoard() {\n  const { gameState } = useContext(GameContext);\n\n  return (\n    <Container>\n      <Gameboard>\n        {Array.from(gameState.gameState).map(item => (\n          <Tile key={item.id} data={item} />\n        ))}\n      </Gameboard>\n    </Container>\n  );\n}\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  & > div {\n    background-color: #6b7580a0;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    flex-grow: 1;\n  }\n`;\n\nexport const Row = styled.div`\n  width: 100%;\n  flex-basis: 100%;\n  flex-grow: 1;\n  display: flex;\n  margin-bottom: 5px;\n`;\n\nexport const ContentContainer = styled.div`\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Banner = styled.div`\n  flex-basis: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  text-align: center;\n  & > span {\n    display: block;\n    padding: 10px;\n    font-size: 24px;\n  }\n`;\n\nexport const ButtonStyle = css`\n  padding: 10px;\n  font-size: 16px;\n  cursor: pointer;\n  :active {\n    box-shadow: none;\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport const InputButton = styled.button`\n  ${ButtonStyle};\n  border-radius: 0px 5px 5px 0px;\n  display: inline-block;\n  flex-basis: 30%;\n  background-color: #1f7e93;\n  border: 2px solid #3f454b;\n  border-left: none;\n  color: rgba(0, 0, 0, 0.75);\n\n  :hover {\n    color: rgba(0, 0, 0, 0.5);\n    background-color: #1f7e93aa;\n  }\n`;\n\nexport const NewGameButton = styled.button`\n  background-color: #1f9382;\n  border: 2px solid #4b736d;\n  border-radius: 5px;\n  box-shadow: 4px 4px 5px rgba(0, 0, 0, 0.35);\n  margin-bottom: 10px;\n  text-align: center;\n  justify-self: center;\n  flex-grow: 1;\n  max-width: 75%;\n  :hover {\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);\n  }\n  ${ButtonStyle}\n`;\n\nexport const StyledInput = styled.input`\n  flex-grow: 1;\n  background-color: #2c3035;\n  border: 2px solid #3f454b;\n  font-size: 16px;\n  color: #f4f5f5;\n  padding: 5px;\n  :focus {\n    outline: none;\n  }\n  ::placeholder {\n    color: #6b7580;\n  }\n`;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { GameContext } from \"./App\";\nimport { Row, StyledInput, InputButton } from \"./GameOptions.styles\";\nimport { MdContentCopy } from \"react-icons/md\";\n\nconst Container = styled.div`\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  border-radius: 5px;\n  padding: 5px 10px 5px 10px;\n\n  & svg {\n    cursor: pointer;\n  }\n`;\n\nconst GameIdText = styled.span`\n  font-family: monospace;\n  transition: all 0.1s ease;\n  font-size: 14px;\n  color: ${(props) => (props.wasCopied ? \"grey\" : \"white\")};\n`;\n\nconst copyToClipboard = (text) => {\n  navigator.permissions.query({ name: \"clipboard-write\" }).then((result) => {\n    if (result.state === \"granted\" || result.state === \"prompt\") {\n      navigator.clipboard.writeText(text);\n    }\n  });\n};\n\nexport default function Component(props) {\n  const { userState, gameState, setName } = useContext(GameContext);\n  const [nameInputVal, setNameInputVal] = useState(\"\");\n  const [wasCopied, setWasCopied] = useState(false);\n\n  const setNickname = () => {\n    localStorage.setItem(\"nickname\", nameInputVal);\n    setName(nameInputVal);\n    setNameInputVal(\"\");\n  };\n\n  useEffect(() => {\n    const savedName = localStorage.getItem(\"nickname\");\n    if (userState && savedName && userState.nickname !== savedName) {\n      setName(savedName);\n    }\n  }, [userState]);\n\n  const nickname = userState && userState.nickname;\n  const gameID = gameState && gameState.id;\n\n  const copyID = () => {\n    copyToClipboard(`${window.location.origin}/#/join/${gameID}`);\n    setWasCopied(true);\n    setTimeout(() => setWasCopied(false), 100);\n  };\n\n  return (\n    <Container>\n      <p>\n        Game ID: <GameIdText wasCopied={wasCopied}>{gameID}</GameIdText>{\" \"}\n        <MdContentCopy onClick={copyID} />\n      </p>\n      <Row>\n        <StyledInput\n          value={nameInputVal}\n          onChange={(e) => setNameInputVal(e.target.value)}\n          placeholder={\"Name: \" + nickname}\n        />\n        <InputButton onClick={setNickname}>Set Nickname</InputButton>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { GameContext } from \"./App\";\nimport SessionOptions from \"./SessionOptions\";\nimport {\n  Container,\n  Row,\n  ContentContainer,\n  Banner,\n  InputButton,\n  NewGameButton,\n  StyledInput\n} from \"./GameOptions.styles\";\n\nexport default function Component(props) {\n  const { joinGame, gameState, createGame } = useContext(GameContext);\n\n  const [sessionInputVal, setSessionInputVal] = useState(\"\");\n\n  const newGame = e => {\n    e.preventDefault();\n    createGame();\n  };\n\n  return (\n    <Container>\n      <div>\n        <Banner>\n          <span>CODENAMES</span>\n        </Banner>\n        <ContentContainer>\n          <NewGameButton onClick={newGame}>New Game</NewGameButton>\n          <Row>\n            <StyledInput\n              value={sessionInputVal}\n              onChange={e => setSessionInputVal(e.target.value)}\n              placeholder=\"Game ID\"\n            />\n            <InputButton onClick={() => joinGame(sessionInputVal)}>\n              Join Game\n            </InputButton>\n          </Row>\n          {gameState && <SessionOptions />}\n        </ContentContainer>\n      </div>\n    </Container>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { GameContext } from \"./App\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  min-height: 300px;\n  font-family: sans-serif;\n  & > * {\n    display: flex;\n    flex-direction: column;\n    flex: 1 0 33%;\n    text-align: center;\n    justify-content: flex-start;\n    margin: 0;\n\n    & > button {\n      background-color: rgba(0, 0, 0, 0.75);\n      color: white;\n      height: 35px;\n      margin: 5px;\n      border: none;\n      transform: all 0.35s ease;\n\n      :hover {\n        background-color: rgba(0, 0, 0, 0.5);\n      }\n\n      :focus {\n        outline: none;\n      }\n    }\n\n    & > p {\n      display: block;\n      background-color: rgba(0, 0, 0, 0.75);\n      margin: 0;\n      padding: 7px;\n      color: rgba(255, 255, 255, 0.75);\n    }\n  }\n  & > div:nth-child(1) {\n    background: #f9f9f0a0;\n  }\n  & > div:nth-child(2) {\n    background: #d56a60a0;\n  }\n  & > div:nth-child(3) {\n    background: #62afd5a0;\n  }\n`;\n\nconst NicknameDisplay = styled.span`\n  display: block;\n  background-color: rgba(0, 0, 0, 0.55);\n  color: rgba(255, 255, 255, 0.75);\n  margin: 3px;\n  padding: 3px;\n`;\n\nexport default function Component(props) {\n  const { gameState, userState, joinTeam, setSpymaster } = useContext(\n    GameContext\n  );\n\n  if (!gameState || !userState) return null;\n\n  const initialUserReduceState = {\n    red: [],\n    blue: [],\n    none: []\n  };\n\n  const users = gameState.players.reduce((acc, current) => {\n    if (!current.team) {\n      acc.none.push(current);\n    } else if (current.team === 1) {\n      acc.red.push(current);\n    } else if (current.team === 2) {\n      acc.blue.push(current);\n    }\n\n    return acc;\n  }, initialUserReduceState);\n\n  return (\n    <Container>\n      <div>\n        <p>UNASSIGNED</p>\n        {users.none.map(user => (\n          <NicknameDisplay key={user.id}>\n            {user.nickname + (user.isSpymaster ? \" (Spymaster)\" : \"\")}\n          </NicknameDisplay>\n        ))}\n      </div>\n      <div>\n        <p>RED</p>\n        {!userState.isSpymaster && !userState.team && (\n          <button onClick={() => joinTeam(1)}>Join</button>\n        )}\n        {users.red.map(user => (\n          <NicknameDisplay key={user.id}>\n            {user.nickname + (user.isSpymaster ? \" (Spymaster)\" : \"\")}\n          </NicknameDisplay>\n        ))}\n        {users.red.find(item => item.id === userState.id) &&\n          !userState.isSpymaster && (\n            <button onClick={() => setSpymaster(true)}>\n              Make Me Spymaster\n            </button>\n          )}\n      </div>\n      <div>\n        <p>BLUE</p>\n        {!userState.isSpymaster && !userState.team && (\n          <button onClick={() => joinTeam(2)}>Join</button>\n        )}\n        {users.blue.map(user => (\n          <NicknameDisplay key={user.id}>\n            {user.nickname + (user.isSpymaster ? \" (Spymaster)\" : \"\")}\n          </NicknameDisplay>\n        ))}\n        {users.blue.find(item => item.id === userState.id) &&\n          !userState.isSpymaster && (\n            <button onClick={() => setSpymaster(true)}>\n              Make Me Spymaster\n            </button>\n          )}\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport JoinURLHandler from \"./JoinURLHandler\";\nimport GameBoard from \"../Components/GameBoard\";\nimport GameOptions from \"../Components/GameOptions\";\nimport Lobby from \"../Components/Lobby\";\n\nimport useSocket from \"./useSocket\";\n\nconst ENDPOINT =\n  process.env.NODE_ENV === \"development\" ? \"localhost:4001/\" : \"/\";\n\nexport const GameContext = React.createContext();\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 750px;\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n`;\n\nfunction App() {\n  const socketContext = useSocket(ENDPOINT);\n  const { gameState } = socketContext;\n\n  return (\n    <HashRouter>\n      <GameContext.Provider value={socketContext}>\n        <Wrapper>\n          <GameOptions />\n          {gameState && (\n            <>\n              <GameBoard />\n              <Lobby />\n            </>\n          )}\n        </Wrapper>\n\n        <Switch>\n          <Route path=\"/join/:id\">\n            <JoinURLHandler />\n          </Route>\n        </Switch>\n      </GameContext.Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\n\nexport default url => {\n  const [socket, setSocket] = useState(null);\n  const [gameState, setGameState] = useState(null);\n  const [userState, setUserState] = useState(null);\n\n  //Make the initial connection\n  useEffect(() => {\n    const connection = io(url);\n    setSocket(connection);\n\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  //Setup the event handlers\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"game_update\", res => {\n        setGameState(res);\n      });\n      socket.on(\"player_update\", res => {\n        setUserState(res);\n      });\n    }\n  }, [socket]);\n\n  const setName = name => {\n    if (socket) {\n      socket.emit(\"set_nickname\", name);\n    }\n  };\n\n  const createGame = () => {\n    if (socket) {\n      socket.emit(\"create_game\");\n    }\n  };\n\n  const joinGame = gameId => {\n    if (socket) {\n      socket.emit(\"join_game\", gameId);\n    }\n  };\n\n  const flipTile = tileId => {\n    if (socket) {\n      socket.emit(\"flip_tile\", tileId);\n    }\n  };\n\n  const joinTeam = teamId => {\n    if (socket) {\n      socket.emit(\"set_team\", teamId);\n    }\n  };\n\n  const setSpymaster = value => {\n    if (socket) {\n      socket.emit(\"set_spymaster\", value);\n    }\n  };\n\n  return {\n    socket,\n    gameState,\n    setName,\n    createGame,\n    userState,\n    flipTile,\n    joinGame,\n    joinTeam,\n    setSpymaster\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}